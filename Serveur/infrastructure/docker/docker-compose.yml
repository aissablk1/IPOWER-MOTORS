# Docker Compose pour IPOWER MOTORS - Développement local
# Architecture hybride OVH + AWS

version: '3.8'

services:
  # Frontend React (simulation S3 + CloudFront)
  frontend:
    build:
      context: ../../app/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    volumes:
      - ../../app/frontend/src:/app/src
      - ../../app/frontend/public:/app/public
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_CDN_URL=http://localhost:8080
    depends_on:
      - backend

  # Backend Express (simulation EC2)
  backend:
    build:
      context: ../../app/backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ../../app/backend/src:/app/src
      - ../../app/backend/dist:/app/dist
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@database:5432/ipower_motors
      - JWT_SECRET=dev_jwt_secret_ipower_motors
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - database
      - redis

  # Base de données PostgreSQL (simulation RDS)
  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ipower_motors
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../AWS-Resources/databases/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis (simulation ElastiCache)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Nginx (simulation Load Balancer + CloudFront)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../app/frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend

  # MinIO (simulation S3)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=ipower_admin
      - MINIO_ROOT_PASSWORD=ipower_password_2025
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MailHog (simulation SES)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Interface web

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: ipower_motors_network
    driver: bridge
